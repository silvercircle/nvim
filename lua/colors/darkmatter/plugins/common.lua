-- highlight support for common plugins, including:
-- * nvim-tree
-- * cmp
-- * GitSigns
-- * Telescope
-- * Mini.pick

local function _set()
  local c = require("colors.darkmatter")
  local conf = c.get_conf()

  c.hl_with_defaults("NvimTreeNormal", c.localtheme.fg_dim, c.palette.neotreebg)
  c.hl_with_defaults("NvimTreeEndOfBuffer", c.localtheme.bg_dim, c.palette.neotreebg)
  c.hl_with_defaults("NvimTreeVertSplit", c.localtheme.bg0, c.localtheme.bg0)
  c.link("NvimTreeSymlinkFolderName", "Blue")
  c.link("NvimTreeSymlinkFolderIcon", "BlueBold")
  c.link("NvimTreeFolderName", "Green")
  c.link("NvimTreeRootFolder", "Darkyellow")
  c.link("NvimTreeFolderIcon", "GreenBold")
  c.link("NeoTreeDirectoryIcon", "GreenBold")
  c.link("NeoTreeDirectoryName", "GreenBold")

  c.link("NvimTreeEmptyFolderName", "Fg")
  c.link("NvimTreeOpenedFolderName", "GreenBold")
  c.link("NvimTreeExecFile", "Fg")
  c.link("NvimTreeOpenedFile", "Orange")
  c.link("NvimTreeSpecialFile", "Fg")
  c.link("NvimTreeImageFile", "Fg")
  c.link("NvimTreeMarkdownFile", "Fg")
  c.link("NvimTreeIndentMarker", "SymbolsOutlineConnector")
  c.link("NvimTreeFolderArrowOpen", "SymbolsOutlineConnector")
  c.link("NvimTreeFolderArrowClosed", "SymbolsOutlineConnector")
  c.link("NvimTreeGitDirty", "Yellow")
  c.link("NvimTreeGitStaged", "Blue")
  c.link("NvimTreeGitMerge", "Orange")
  c.link("NvimTreeGitRenamed", "Purple")
  c.link("NvimTreeGitNew", "Green")
  c.link("NvimTreeGitDeleted", "Red")
  c.link("NvimTreeLspDiagnosticsError", "RedSign")
  c.link("NvimTreeLspDiagnosticsWarning", "YellowSign")
  c.link("NvimTreeLspDiagnosticsInformation", "BlueSign")
  c.link("NvimTreeLspDiagnosticsHint", "GreenSign")
  c.link("NvimTreeCursorLine", "TreeCursorLine")

  c.link("MiniNotifyNormal", "NeoTreeNormalNC")
  c.link("MiniNotifyBorder", "CmpBorder")
  c.link("NeoTreeFilenameOpened", "OrangeBold")
   -- CMP (with custom menu setup)
  c.link("CmpItemMenu", "Fg")
  c.link("CmpItemMenuDetail", "@include")
  c.link("CmpItemMenuBuffer", "FgDim")
  c.link("CmpItemMenuSnippet", "Number")
  c.link("CmpItemMenuLSP", "StorageClass")
  c.link("CmpItemAbbr", "Fg")
  c.set_hl(0, "CmpItemAbbrDeprecated", { bg = "NONE", strikethrough = true, fg = "#808080" })
  c.link("CmpItemAbbrMatch", "RedBold")
  c.link("CmpItemAbbrMatchFuzzy", "DarkPurpleBold")
  c.hl_with_defaults("CmpPmenu", c.localtheme.fg, c.localtheme.bg_dim)
  c.hl_with_defaults("CmpPmenuBorder", c.palette.grey_dim, c.localtheme.bg_dim)
  c.hl_with_defaults("CmpGhostText", c.palette.grey, c.palette.none)
  c.link("CmpItemKindDefault", "FgDim")
  c.link("CmpItemKind", "CmpItemKindDefault")
  c.link("CmpItemMenuPath", "CmpItemMenu")
  c.link("CmpItemKindStructRev", "Structure")
  c.hl("CmpItemKindStruct", c.localtheme.darkpurple, c.palette.none, conf.attrib.cmpkind)
  c.link("CmpItemKindConstructorRev", "@constructor")
  c.hl("CmpItemKindConstructor", c.localtheme.yellow, c.palette.none, conf.attrib.cmpkind)
  c.link("CmpItemKindMethodRev", "Method")
  c.hl("CmpItemKindMethod", c.localtheme.brightteal, c.palette.none, conf.attrib.cmpkind)
  c.link("CmpItemKindModuleRev", "@include")
  c.hl("CmpItemKindModule", c.palette.olive, c.palette.none, conf.attrib.cmpkind)
  c.link("CmpItemKindClassRev", "Class")
  c.hl("CmpItemKindClass", c.localtheme.special.class, c.palette.none, conf.attrib.cmpkind)
  c.link("CmpItemKindVariableRev", "Fg")
  c.hl("CmpItemKindVariable", c.localtheme.fg, c.palette.none, conf.attrib.cmpkind)
  c.link("CmpItemKindPropertyRev", "Member")
  c.hl("CmpItemKindProperty", c.localtheme.orange, c.palette.none, conf.attrib.cmpkind)
  c.link("CmpItemKindFieldRev", "Member")
  c.link("CmpItemKindField", "CmpItemKindProperty")
  c.link("CmpItemKindFunctionRev", "Function")
  c.hl("CmpItemKindFunction", c.localtheme.teal, c.palette.none, conf.attrib.cmpkind)
  c.link("CmpItemKindKeywordRev", "Keyword")
  c.hl("CmpItemKindKeyword", c.localtheme.blue, c.palette.none, conf.attrib.cmpkind)
  c.link("CmpItemKindTextRev", "Fg")
  c.link("CmpItemKindText", "CmpItemKindVariable")
  c.link("CmpItemKindUnitRev", "@include")
  c.hl("CmpItemKindUnit", c.palette.olive, c.palette.none, conf.attrib.cmpkind)
  c.link("CmpItemKindConstantRev", "Constant")
  c.hl("CmpItemKindConstant", c.palette.purple, c.palette.none, conf.attrib.cmpkind)
  c.link("CmpItemKindEnumRev", "CmpItemKindConstantRev")
  c.link("CmpItemKindEnum", "CmpItemKindConstant")
  c.link("CmpItemKindSnippetRev", "CmpItemMenuSnippet")
  c.hl("CmpItemKindSnippet", c.localtheme.special.green, c.palette.none, conf.attrib.cmpkind)
  c.link("CmpItemKindOperatorRev", "Operator")
  c.hl("CmpItemKindOperator", c.localtheme.special[conf.special.operator], c.palette.none, conf.attrib.cmpkind)
  c.link("CmpItemKindInterfaceRev", "Interface")
  c.hl("CmpItemKindInterface", c.localtheme.purple, c.palette.none, conf.attrib.cmpkind)
  c.link("CmpItemKindValueRev", "StorageClass")
  c.hl("CmpItemKindValue", c.localtheme.special.storage, c.palette.none, conf.attrib.cmpkind)
  c.hl_with_defaults("CmpFloat", c.localtheme.fg_dim, c.palette.neotreebg)
  c.hl_with_defaults("CmpBorder", c.localtheme.bg4, c.palette.neotreebg)

  c.hl_with_defaults("TelescopeBorder", c.localtheme.accent, c.palette.neotreebg)
  c.hl_with_defaults("TelescopePromptBorder", c.localtheme.accent, c.palette.neotreebg)
  c.hl_with_defaults("TelescopeNormal", c.localtheme.fg_dim, c.palette.neotreebg)
  c.hl("TelescopeTitle", c.localtheme.accent_fg, c.localtheme.accent, conf.attrib.bold)
  c.hl("TelescopePromptNormal", c.localtheme.fg_dim, c.palette.neotreebg, conf.attrib.bold)
  c.hl("TelescopeMatching", c.palette.deepred, c.palette.none, conf.attrib.bold)

  c.link("MiniPickBorder", "TelescopeBorder")
  c.link("MiniPickBorderBusy", "TelescopeBorder")
  c.link("MiniPickBorderText", "TelescopeBorder")
  c.link("MiniPickNormal", "TelescopeNormal")
  c.link("MiniPickHeader", "TelescopeTitle")
  c.link("MiniPickMatchCurrent", "Visual")
  c.link("TelescopeResultsLineNr", "Yellow")
  c.link("TelescopePromptPrefix", "Blue")
  c.link("TelescopeSelection", "TreeCursorLine")
  c.link("FzfLuaNormal", "TelescopeNormal")
  c.link("FzfLuaBorder", "TelescopeBorder")
  c.link("FzfLuaSearch", "TelescopeMatching")

  c.link("GitSignsAdd", "GreenSign")
  c.link("GitSignsAddNr", "GreenSign")
  c.link("GitSignsChange", "BlueSign")
  c.link("GitSignsChangeNr", "BlueSign")
  c.link("GitSignsDelete", "RedSign")
  c.link("GitSignsDeleteNr", "RedSign")
  c.link("GitSignsAddLn", "GreenSign")
  c.link("GitSignsChangeLn", "BlueSign")
  c.link("GitSignsDeleteLn", "RedSign")
  c.link("GitSignsCurrentLineBlame", "Grey")
  c.link("GitSignsAddInline", "Visual")
  c.link("GitSignsChangeInline", "Visual")
  c.link("GitSignsDeleteInline", "Visual")

  c.link("TroubleNormal", "NeoTreeNormalNC")
end

local M = {}
function M.set()
  _set()
end

return M

